name: Update Wemp Service Versions

on:
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:

jobs:
  update-versions:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.changes.outputs.has_changes }}
      has_patch_updates: ${{ steps.update.outputs.has_patch_updates }}
      has_major_minor_updates: ${{ steps.update.outputs.has_major_minor_updates }}
      major_minor_services: ${{ steps.update.outputs.major_minor_services }}
      update_summary: ${{ steps.update.outputs.update_summary }}
      updated_versions: ${{ steps.store.outputs.updated_versions }}
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'

      - name: Update service versions
        id: update
        run: npm run update-versions

      - name: Check for changes
        id: changes
        run: |
          if git diff --quiet; then
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi

      - name: Store updated versions
        if: steps.changes.outputs.has_changes == 'true'
        id: store
        run: |
          # Store the full updated versions.json for use in PR jobs
          updated_versions=$(cat api/wemp/versions.json | jq -c .)
          echo "updated_versions=$updated_versions" >> $GITHUB_OUTPUT

      - name: Generate commit message
        if: steps.changes.outputs.has_changes == 'true'
        id: message
        run: |
          if [[ "${{ steps.update.outputs.has_patch_updates }}" == "true" && "${{ steps.update.outputs.has_major_minor_updates }}" == "true" ]]; then
            echo "commit_message=Update Wemp service versions (patch + major/minor updates)" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.update.outputs.has_patch_updates }}" == "true" ]]; then
            echo "commit_message=Update Wemp service versions (patch updates)" >> $GITHUB_OUTPUT
          else
            echo "commit_message=Update Wemp service versions (major/minor updates)" >> $GITHUB_OUTPUT
          fi

      - name: Commit and push patch updates
        if: steps.changes.outputs.has_changes == 'true' && steps.update.outputs.has_patch_updates == 'true'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Build descriptive commit message from patch updates
          update_summary='${{ steps.update.outputs.update_summary }}'

          # Create commit message with all patch updates
          commit_msg="patch updates:"
          if patch_updates=$(echo "$update_summary" | jq -r '.patch[]? | " bump \(.service) from \(.from) to \(.to)"' | tr '\n' ',' | sed 's/,$//'); then
            commit_msg="$commit_msg$patch_updates"
          fi

          git add api/wemp/versions.json
          git commit -m "$commit_msg"

          # Retry push with force if needed (in case of conflicts)
          for i in {1..3}; do
            if git push; then
              echo "Successfully pushed changes"
              break
            else
              echo "Push failed, attempting to pull and retry..."
              git pull --rebase origin main
              if [ $? -eq 0 ]; then
                continue
              else
                echo "Rebase failed, will retry..."
                git rebase --abort || true
                git pull --no-rebase origin main
              fi
            fi
          done

  create-service-prs:
    runs-on: ubuntu-latest
    needs: update-versions
    if: needs.update-versions.outputs.has_major_minor_updates == 'true'
    permissions:
      contents: write
      pull-requests: write
    strategy:
      fail-fast: false
      max-parallel: 4
      matrix:
        include:
          - service: nginx
            display_name: nginx
            changelog: "üìã [nginx changelog](https://nginx.org/en/CHANGES)"
          - service: mariadb
            display_name: MariaDB
            changelog: "üìã [MariaDB releases](https://mariadb.org/release-notes/)"
          - service: php
            display_name: PHP
            changelog: "üìã [PHP releases](https://www.php.net/releases/)"
          - service: phpmyadmin
            display_name: phpMyAdmin
            changelog: "üìã [phpMyAdmin releases](https://github.com/phpmyadmin/phpmyadmin/releases)"

    steps:
      - name: Check if service needs update
        id: check
        run: |
          services='${{ needs.update-versions.outputs.major_minor_services }}'
          echo "Services with major/minor updates: $services"

          # Check if the service is in the JSON array
          if echo "$services" | jq -e --arg svc "${{ matrix.service }}" 'any(. == $svc)' > /dev/null 2>&1; then
            echo "Service ${{ matrix.service }} needs update"
            echo "needs_update=true" >> $GITHUB_OUTPUT
          else
            echo "Service ${{ matrix.service }} does not need update"
            echo "needs_update=false" >> $GITHUB_OUTPUT
          fi

      - name: Skip if no update needed
        if: steps.check.outputs.needs_update == 'false'
        run: |
          echo "No ${{ matrix.service }} update needed, skipping"

      - name: Checkout repository
        if: steps.check.outputs.needs_update == 'true'
        uses: actions/checkout@v4
        with:
          ref: main

      - name: Get service update details
        if: steps.check.outputs.needs_update == 'true'
        id: details
        run: |
          update_summary='${{ needs.update-versions.outputs.update_summary }}'
          service_update=$(echo "$update_summary" | jq -r ".majorMinor[] | select(.service == \"${{ matrix.service }}\")")

          from_version=$(echo "$service_update" | jq -r '.from')
          to_version=$(echo "$service_update" | jq -r '.to')
          update_type=$(echo "$service_update" | jq -r '.type')

          echo "from_version=$from_version" >> $GITHUB_OUTPUT
          echo "to_version=$to_version" >> $GITHUB_OUTPUT
          echo "update_type=$update_type" >> $GITHUB_OUTPUT

      - name: Apply service update
        if: steps.check.outputs.needs_update == 'true'
        run: |
          # Get the updated versions from parent job output
          updated_versions='${{ needs.update-versions.outputs.updated_versions }}'

          # Extract this service's version and URL from the full updated versions
          service_version=$(echo "$updated_versions" | jq -r '."${{ matrix.service }}".version')
          service_url=$(echo "$updated_versions" | jq -r '."${{ matrix.service }}".downloadUrl')

          echo "Applying update for ${{ matrix.service }}: $service_version"
          echo "Download URL: $service_url"

          # Apply only this service's update to versions.json
          jq --arg service "${{ matrix.service }}" \
             --arg version "$service_version" \
             --arg url "$service_url" \
             '.[$service] = {"version": $version, "downloadUrl": $url}' \
             api/wemp/versions.json > temp.json
          mv temp.json api/wemp/versions.json

      - name: Create Pull Request
        if: steps.check.outputs.needs_update == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "bump ${{ matrix.service }} from ${{ steps.details.outputs.from_version }} to ${{ steps.details.outputs.to_version }}"
          title: "‚¨ÜÔ∏è bump ${{ matrix.service }} from ${{ steps.details.outputs.from_version }} to ${{ steps.details.outputs.to_version }}"
          body: |
            Bumps ${{ matrix.service }} from ${{ steps.details.outputs.from_version }} to ${{ steps.details.outputs.to_version }}.

            This is a **${{ steps.details.outputs.update_type }}** update.

            ${{ matrix.changelog }}
          branch: update-${{ matrix.service }}
          delete-branch: false
          labels: |
            ${{ matrix.service }}
            ${{ steps.details.outputs.update_type }}-update
